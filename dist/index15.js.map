{"version":3,"file":"index15.js","sources":["../node_modules/@ionic/core/dist/collection/global/config.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n// TODO(FW-2832): types\nexport class Config {\n    constructor() {\n        this.m = new Map();\n    }\n    reset(configObj) {\n        this.m = new Map(Object.entries(configObj));\n    }\n    get(key, fallback) {\n        const value = this.m.get(key);\n        return value !== undefined ? value : fallback;\n    }\n    getBoolean(key, fallback = false) {\n        const val = this.m.get(key);\n        if (val === undefined) {\n            return fallback;\n        }\n        if (typeof val === 'string') {\n            return val === 'true';\n        }\n        return !!val;\n    }\n    getNumber(key, fallback) {\n        const val = parseFloat(this.m.get(key));\n        return isNaN(val) ? (fallback !== undefined ? fallback : NaN) : val;\n    }\n    set(key, value) {\n        this.m.set(key, value);\n    }\n}\nexport const config = /*@__PURE__*/ new Config();\nexport const configFromSession = (win) => {\n    try {\n        const configStr = win.sessionStorage.getItem(IONIC_SESSION_KEY);\n        return configStr !== null ? JSON.parse(configStr) : {};\n    }\n    catch (e) {\n        return {};\n    }\n};\nexport const saveConfig = (win, c) => {\n    try {\n        win.sessionStorage.setItem(IONIC_SESSION_KEY, JSON.stringify(c));\n    }\n    catch (e) {\n        return;\n    }\n};\nexport const configFromURL = (win) => {\n    const configObj = {};\n    win.location.search\n        .slice(1)\n        .split('&')\n        .map((entry) => entry.split('='))\n        .map(([key, value]) => {\n        try {\n            return [decodeURIComponent(key), decodeURIComponent(value)];\n        }\n        catch (e) {\n            return ['', ''];\n        }\n    })\n        .filter(([key]) => startsWith(key, IONIC_PREFIX))\n        .map(([key, value]) => [key.slice(IONIC_PREFIX.length), value])\n        .forEach(([key, value]) => {\n        configObj[key] = value;\n    });\n    return configObj;\n};\nconst startsWith = (input, search) => {\n    return input.substr(0, search.length) === search;\n};\nconst IONIC_PREFIX = 'ionic:';\nconst IONIC_SESSION_KEY = 'ionic-persist-config';\n"],"names":["Config","configObj","key","fallback","value","val","config"],"mappings":"AAAA;AAAA;AAAA;AAIO,MAAMA,EAAO;AAAA,EAChB,cAAc;AACV,SAAK,IAAI,oBAAI,IAAK;AAAA,EAC1B;AAAA,EACI,MAAMC,GAAW;AACb,SAAK,IAAI,IAAI,IAAI,OAAO,QAAQA,CAAS,CAAC;AAAA,EAClD;AAAA,EACI,IAAIC,GAAKC,GAAU;AACf,UAAMC,IAAQ,KAAK,EAAE,IAAIF,CAAG;AAC5B,WAAOE,MAAU,SAAYA,IAAQD;AAAA,EAC7C;AAAA,EACI,WAAWD,GAAKC,IAAW,IAAO;AAC9B,UAAME,IAAM,KAAK,EAAE,IAAIH,CAAG;AAC1B,WAAIG,MAAQ,SACDF,IAEP,OAAOE,KAAQ,WACRA,MAAQ,SAEZ,CAAC,CAACA;AAAA,EACjB;AAAA,EACI,UAAUH,GAAKC,GAAU;AACrB,UAAME,IAAM,WAAW,KAAK,EAAE,IAAIH,CAAG,CAAC;AACtC,WAAO,MAAMG,CAAG,IAAKF,MAAa,SAAYA,IAAW,MAAOE;AAAA,EACxE;AAAA,EACI,IAAIH,GAAKE,GAAO;AACZ,SAAK,EAAE,IAAIF,GAAKE,CAAK;AAAA,EAC7B;AACA;AACY,MAACE,IAAuB,oBAAIN,EAAM;","x_google_ignoreList":[0]}