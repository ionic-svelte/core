{"version":3,"file":"index12.js","sources":["../utils/controllers.ts"],"sourcesContent":["import type { ModalOptions, PopoverOptions } from \"@ionic/core\";\nimport {\n  modalController as modalControllerOrg,\n  popoverController as popoverControllerOrg,\n} from \"@ionic/core\";\n\nimport type { SvelteComponent } from \"svelte\";\n\n/*\nTODO - interface needs to translate SvelteComponent type into ComponentRef \nNow we have to do this:\n\nconst openModal = async (modalComponent: SvelteComponent, formData: {}) => {\n    const popover = await modalController.create({\n      component: modalComponent as unknown as ComponentRef, // ModalOptions does not eat SvelteComponent\n      componentProps: {\n        formData,\n      },\n    });\n\n    popover.onDidDismiss().then((value) => {\n      console.log(\"Dismissed the popover\", value);\n      if (value.role === \"backdrop\") console.log(\"Backdrop clicked\");\n    });\n\n    await popover.present();\n  };\n*/\n\nexport const modalController = {\n  create: (modalOptions: ModalOptions): Promise<HTMLIonModalElement> => {\n    console.warn(\n      \"modalController broken - use inline modal - https://github.com/Tommertom/svelte-ionic-app/issues/77\",\n    );\n    // needs to be typed to ModalOptions (Partial or so?)\n    // @ts-ignore - issue with modalOptions.component not matching\n\n    console.warn(\n      \"modalController fails - use inline modal instead - https://github.com/Tommertom/svelte-ionic-app/issues/77\",\n    );\n\n    return Promise.resolve(\n      //@ts-ignore\n      modalController.__create(modalOptions.component, modalOptions),\n    ) as Promise<HTMLIonModalElement>;\n  },\n  __create: (\n    component: new (...args: any) => SvelteComponent,\n    modalOptions: ModalOptions,\n  ) => {\n    const divWrapper = document.createElement(\"div\");\n    const contentID = \"id\" + Date.now();\n    divWrapper.id = contentID;\n\n    const modalWrapper = document.createElement(\n      \"ion-modal\",\n    ) as HTMLIonModalElement;\n    // console.log('ADDING CSS', modalOptions.cssClass);\n    // this part is not working\n    if (modalOptions.cssClass) {\n      if (Array.isArray(modalOptions.cssClass)) {\n        modalOptions.cssClass.forEach((cssClass) => {\n          modalWrapper.classList.add(cssClass);\n        });\n      } else modalWrapper.classList.add(modalOptions.cssClass);\n    }\n\n    let modalContent = document.createElement(\"div\");\n\n    /* assign properties */\n    Object.keys(modalOptions)\n      .filter((key) => ![\"component\", \"componentProps\"].includes(key))\n      .forEach((key) => {\n        //@ts-ignore\n        modalWrapper[key] = modalOptions[key];\n      });\n\n    divWrapper.appendChild(modalWrapper);\n    modalWrapper.appendChild(modalContent);\n    document.body.appendChild(divWrapper);\n\n    const svelteComponent = new component({\n      target: modalContent,\n      props: modalOptions.componentProps,\n    });\n\n    modalWrapper.onDidDismiss().then(() => {\n      svelteComponent.$destroy();\n      divWrapper.remove();\n    });\n\n    return modalWrapper;\n  },\n\n  dismiss: (data?: any, role?: string | undefined, id?: string | undefined) => {\n    return modalControllerOrg.dismiss(data, role);\n  },\n\n  getTop: () => {\n    return modalControllerOrg.getTop();\n  },\n};\n\nexport const popoverController = {\n  create: (popoverOptions: PopoverOptions): Promise<HTMLIonPopoverElement> => {\n    // @ts-ignore - issue with popoverOptions.component not matching\n    return Promise.resolve(\n      //@ts-ignore\n      popoverController.__create(popoverOptions.component, popoverOptions),\n    ) as Promise<HTMLIonPopoverElement>;\n  },\n\n  __create: (\n    component: new (...args: any) => SvelteComponent,\n    popoverOptions: PopoverOptions,\n  ) => {\n    const divWrapper = document.createElement(\"div\");\n    const contentID = \"id\" + Date.now();\n    divWrapper.id = contentID;\n\n    const popoverWrapper = document.createElement(\n      \"ion-popover\",\n    ) as HTMLIonPopoverElement;\n\n    // console.log('ADDING CSS', modalOptions.cssClass);\n    // this part is not working\n    if (popoverOptions.cssClass) {\n      if (Array.isArray(popoverOptions.cssClass)) {\n        popoverOptions.cssClass.forEach((cssClass) => {\n          popoverWrapper.classList.add(cssClass);\n        });\n      } else popoverWrapper.classList.add(popoverOptions.cssClass);\n    }\n\n    let popoverContent = document.createElement(\"div\");\n\n    /* assign properties */\n    Object.keys(popoverOptions)\n      .filter((key) => ![\"component\", \"componentProps\"].includes(key))\n      .forEach((key) => {\n        //@ts-ignore\n        popoverWrapper[key] = popoverOptions[key];\n      });\n\n    divWrapper.appendChild(popoverWrapper);\n    popoverWrapper.appendChild(popoverContent);\n    document.body.appendChild(divWrapper);\n\n    const svelteComponent = new component({\n      target: popoverContent,\n      props: popoverOptions.componentProps,\n    });\n\n    popoverWrapper.onDidDismiss().then(() => {\n      svelteComponent.$destroy();\n      divWrapper.remove();\n    });\n\n    return popoverWrapper;\n  },\n  dismiss: (data?: any, role?: string | undefined, id?: string | undefined) => {\n    return popoverControllerOrg.dismiss(data, role);\n  },\n  getTop: () => {\n    return popoverControllerOrg.getTop();\n  },\n};\n"],"names":["modalController","modalOptions","component","divWrapper","contentID","modalWrapper","cssClass","modalContent","key","svelteComponent","data","role","id","modalControllerOrg","popoverController","popoverOptions","popoverWrapper","popoverContent","popoverControllerOrg"],"mappings":"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"}